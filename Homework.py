from functools import reduce
from itertools import cycle, count
from sys import argv
from numpy import arange
import matplotlib.pyplot as plt

#_____________________ Задание 1 (скрипт с параметрами)
print('Задание №1 ↓')

hours, rate_per_hour, bonus = map(int, argv[1:])
print(f'З/п сотрудника = {hours * rate_per_hour + bonus} у.е.', end='\n\n')

# _____________________ Задание 2 (генератор списка с условием )
print('Задание №2 ↓')

base_list = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
new_list = [base_list[i] for i in range(1, len(base_list)) if base_list[i] > base_list[i - 1]]

print(f'Новый список : {new_list}', end='\n\n')

# _____________________ Задание 3 (Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21.)
print('Задание №3 ↓')

print(f'Числа от 20 до 240, кратные 20 или 21 : {[i for i in range(20, 241) if (i % 20 == 0) or (i % 21 == 0)]}'
      , end="\n\n")

# _____________________ Задание 4 (убираем повторяющиеся значения из списка)
print('Задание №4 ↓')

base_list = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]

print(f'Список с уникальными значениями: {[i for i in base_list if base_list.count(i) == 1]}', end='\n\n')

# _____________________ Задание 5 (произведение всех чётных чисел списка от 100 до 1000 через reduce)
print('Задание №5 ↓')


def multip(a, b):
    return a * b


base_list = [i for i in range(100, 1001) if i % 2 == 0]
print(f' Полученное число : {reduce(multip, base_list)}', end='\n\n')

# _____________________ Задание 6 ()
print('Задание №6 ↓')


def input_start_count():
    """ Запрашивает и проверяет на корректность стартовое значение количества котов"""
    try:
        cat_count = int(input('Введите начальное количество котов : '))
        if cat_count > 90:
            print('Кажется с уютом дома у Вас всё в порядке, давайте попробуем ввести число меньше 90')
            return input_start_count()
        elif cat_count < 0:
            print('Кот - сущность положительная, где положишь - там и лежит.\n'
                  'Вот и количество котов должно быть положительным')
            return input_start_count()
        else:
            return cat_count
    except ValueError:
        print('Несмотря на то, что кот - это жидкость, необходимо указать количество котов цифрой :')
        return input_start_count()


count_dic = [{0: 'ноль', 1: 'один', 2: 'два', 3: 'три', 4: 'четыре', 5: 'пять', 6: 'шесть', 7: 'семь',
              8: 'восемь', 9: 'девять'},
             {10: 'десять', 11: 'одиннадцать', 12: 'двенадцать', 13: 'тринадцать', 14: 'четырнадцать',
              15: 'пятнадцать', 16: 'шестнадцать', 17: 'семнадцать', 18: 'восемнадцать', 19: 'девятнадцать'},
             {2: 'двадцать', 3: 'тридцать', 4: 'сорок', 5: 'пятьдесят', 6: 'шестьдесят', 7: 'семьдесят',
              8: 'восемьдесят', 9: 'девяносто'}]

cat_dic = ['котов', 'кот', 'кота', 'кота', 'кота', 'котов', 'котов', 'котов', 'котов', 'котов']

units = ['единиц', 'единицу', 'единицы', 'единицы', 'единицы', 'единиц', 'единиц', 'единиц', 'единиц', 'единиц']

song = ['Купии котааа', 'Ведь кот есть сииила притяжееенья', 'Кота в котааа']

print('Как известно, уют дома квадратично зависит от количества в жилище котов.\n'
      'Программа запросит от вас начальное количество котов, а затем покажет \n'
      'как будет увеличиваться уют с каждым новым котом дома.')
n = input_start_count()

for i in count(n):
    if i > n + 5:
        print('Ну как-то так. Думаю, теперь очевидно что пора купить кота.', end='\n\n')
        break
    if i < 10:
        print(f'{count_dic[0][i]} {cat_dic[i]} привносит {i ** 2} {units[i ** 2 % 10]} уюта')
    elif (i >= 10) and (i < 20):
        print(f'{count_dic[1][i]} {cat_dic[0]} привносит {i ** 2} {units[i ** 2 % 10]} уюта')
    else:
        if i % 10 != 0:
            print(
                f'{count_dic[2][i // 10]} {count_dic[0][i % 10]} {cat_dic[i % 10]} привносит {i ** 2} {units[i ** 2 % 10]}'
                f' уюта')
        else:
            print(
                f'{count_dic[2][i // 10]} {cat_dic[i % 10]} привносит {i ** 2} {units[i ** 2 % 10]} уюта')

vis = arange(n, n + 6)
plt.plot(vis, vis ** 2)
plt.xlabel('Количество котов')
plt.ylabel('Единиц уюта')
plt.title('Квадратичная зависимость единиц уюта дома от количества котов\n'
          '*закройте график чтобы продолжить*')
plt.grid(True)
plt.show()

if input('А теперь, предлагаю почитать текст песни. Воспоризвести хит? (да/нет) : ').lower() == "нет":
    print('Жаль, песня превосходна. Всего доброго!', end='\n\n')
else:
    n = 0
    for el in cycle(song):
        if n > 12:
            print('Пожалуй достаточно. Всего доброго!', end='\n\n')
            break
        else:
            print(el)
            n += 1

# _____________________ Задание 7 ( Рассчитать факториалы чисел через yeld)
print('Задание №7 ↓')


def input_fact():
    """ Запрашивает у пользователя число и проверяет его на корректность """
    try:
        n = int(input('Введите число N, программа выведет факториалы всех чисел от 1 до N : '))
        if n > 0:
            return n
        else:
            raise ValueError
    except ValueError:
        print('Необходимо ввести целое положительно число больше 0')
        return input_fact()


def for_el_in_fact(n):
    """ Поочерёдно выводит элементы списка от 1 до N"""
    for k in range(1, n + 1):
        fact = 1
        for j in range(1, k + 1):
            fact *= j
        yield k, fact


n = input_fact()

for k, fact in for_el_in_fact(n):
    print(f'{k}! = {" * ".join([str(j) for j in range(1, k + 1)])} = {fact}')
